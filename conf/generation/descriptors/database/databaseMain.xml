<?xml version="1.0" encoding="UTF-8"?>

<databaseMain xmlns="aaacs.coreserver/generation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="aaacs.coreserver/generation ../../schemas/csDocDatabaseMain.xsd">
	
	<sequences>
		<sequence name="qidk" increment="1" start="1000">
			<comment type="SQL" indent="0">
Creating a sequence for primary/foreign keys: the following numbers are
reserved: 1-999. The reserved numbers are useful when found in tables
as foreign keys.
Current usage:
1: Indicates uninitialized: the user/system did not enter in 
any value whatsoever, so it was never initialized.

101: Indicates the record that stores the default values of
whatever columns that require default values.

102: Indicates the record that represents the case where the
user/system made a choice, but intended to say "It is not
not known", or "It was not answered." So it *is* initialized
but cannot be filled in with any known info. From a user
interface POV, this is the "unknown" choice in a list.

103: Indicates that the user or system deliberately entered in a
value, but that value purposely represents 'no-value', as
in there is no other primary key that matches this value.
This is useful when we want to indicate for a foreign key
constraint that there is no primary key in the referenced
table that matches. This is effectively breaking the foreign
key constraint, so this choice should be used with caution
and a better design choice would be to insert an intermediate
table with two columns between them [Referencer|Referenced].
IN GENERAL, DO NOT USE THIS VALUE UNLESS CREATING AN
INTERMEDIATE TABLE IS TRULY ABSOLUTELY COMPLETELY WITHOUT A
DOUBT NOT WORTH IT! ...i.e. this value is a crummy kludge...

901: Indicates initialized but "matching" all other keys (useful
in certain contexts, notably permissions). This is like a '*'
wildcard, meaning "all possible primary keys are accepted".

902: Indicates initialized but "matching" all RESERVED keys.

903: Indicates initialized but "matching" all USER-SUPPLIED keys.
			</comment>
		</sequence>
	</sequences>

	<comments>
		<comment name="createDatabaseFileHeaderComment" type="SQL" indent="0">
		----------------------------------------------------------------------------
		THIS FILE IS AUTOMATICALLY GENERATED. DO NOT CHANGE IT OR YOUR CHANGES
		WILL BE OVERWRITTEN.
		----------------------------------------------------------------------------
		Initialization file for the Real Estate Project database.
		Copyright (C) Ahmed A. Abd-Allah, 2006
		
		Contains: Instructions to create the database schema.
		 
		----------------------------------------------------------------------------
		
		Naming Conventions: --------------------------------------------------------
		All tables, sequences, and constraints are named. There are some minor
		naming conventions to follow:
		Tables start with lowercase 't'.
		Sequences start with lowercase 'q'.
		Constraints start with lowercase 'uq' (if for uniqueness), 'fk' (if for
		foreign key), followed by a three digit unique number.
		All of the above, plus column names, follow Java naming conventions
		for the remaining letters.
		THERE IS ONE KEY NAMING ASSUMPTION FOR COLUMN NAMES: ALL KEYS (PRIMARY
		OR FOREIGN) MUST END IN THE LETTERS "Idk" (Identification Key). The less 
		than appealing corollary to all this is AVOID column names ending in 
		"Idk" that are NOT PRIMARY KEYS. This is important at the application 
		server layer which uses this little naming hack to decide what to 
		scramble, and what to leave alone. Yes, there are better solutions, but
		there're not worth it. For now.
		</comment>
	</comments>
	
</databaseMain>
